apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "backend.name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ include "backend.name" . }}
        {{- include "backend.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "backend.fullname" . }}
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATASOURCE_URL
              value: {{ .Values.envs.DATASOURCE_URL | quote }}
            - name: DATASOURCE_USERNAME
              value: {{ .Values.envs.DATASOURCE_USERNAME | quote }}
          {{- if .Values.secrets.existingSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.secrets.existingSecret }}
          {{- end }}
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
